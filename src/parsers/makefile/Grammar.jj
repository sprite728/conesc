// Copyright (c) 2013 Mikhail Afanasov and DeepSe group. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
options{  JDK_VERSION = "1.5";  static = false;}PARSER_BEGIN(Parser)
// Copyright (c) 2013 Mikhail Afanasov and DeepSe group. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
package parsers.makefile;

public class Parser {
  private MakeFile _file = new MakeFile();
  public MakeFile getParsedFile() {
    return _file;  }}PARSER_END(Parser)SKIP :{  " "| "\r"| "\t"| "\n"}

TOKEN :
{
  < COMPONENT : "COMPONENT" >
| < PFLAGS : "PFLAGS" >
| < EQUALS : "=" >
| < ADD : "+=" >
| < INCLUDEFLAG : "-I" >
| < DIRECTORY : (("../"|"./"|"/")(""|< NAME >))+ >
| < INCLUDE : "include" >
| < VARNAME : "$("< NAME >")" >
| < NAME : (["A"-"Z","a"-"z","_"])+ >
}

void parse(): {
  Token componentName;
}{
  (
   < COMPONENT >< EQUALS >
   componentName = < NAME >
   {_file.componentName = componentName.image;}
  |
   < INCLUDE >
   componentName = < VARNAME >
   {}
  |
   < PFLAGS >< ADD >
   (
    < INCLUDEFLAG >
    componentName = < DIRECTORY >
    {_file.paths.add(componentName.image.split("/"));}
   )*
  )*
}